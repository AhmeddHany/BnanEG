﻿@using Bnan.Core.Extensions;
@model Bnan.Ui.ViewModels.CAS.BranchVM

@inject IViewLocalizer localizer

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div class="col  d-flex align-items-center justify-content-center flex-column">
    <div class="container NewUpdate-container">
        <form asp-area="CAS" asp-action="Edit" asp-controller="Branches" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
            <input asp-for="CrCasBranchInformationCode" id="BranchId" hidden />
            <input asp-for="CrCasBranchInformationArName" id="BranchId" hidden />
            <input asp-for="CrCasBranchInformationArShortName" id="BranchId" hidden />
            <input asp-for="CrCasBranchInformationEnName" id="BranchId" hidden />
            <input asp-for="CrCasBranchInformationEnShortName" id="BranchId" hidden />
            <input asp-for="BranchPostVM.CrCasBranchPostCity" id="BranchId" hidden />
            <input asp-for="CrCasBranchInformationDirectorSignature" id="BranchId" hidden />
            <input asp-for="CrCasBranchInformationStatus"  hidden />
            <input name="SigntureFile" id="SigntureFile" hidden />
            <input name="DocImg" id="DocImg" hidden />
            <div class="row">

                <div class="row justify-content-center">
                    <div class="col-lg-9">
                        <div class="row g-3 my-2">
                            <div class="col-md-6">
                                <h3> @localizer["Edit Branch Data"] </h3>
                            </div>
                            <div class="col-md-6 save-col">
                                <button type="submit" class="custom-img-btn" id="SaveEdit">
                                    <img src="~/CasSys/images/save.svg" />
                                </button>
                                <button type="button" class="custom-img-btn" id="HoldBtn" data-bs-toggle="modal" data-bs-target="#Stop-Modal">
                                    <img id="StopModalIcon" src="~/CasSys/images/stop.svg" />
                                </button>
                                <button type="button" class="custom-img-btn" id="DeleteBtn" data-bs-toggle="modal" data-bs-target="#Delete-Modal">
                                    <img id="modalIcon" src="~/CasSys/images/delete (2).svg" />
                                </button>
                                <button type="button" class="custom-img-btn">
                                    <a href="/CAS/Branches/Branches">
                                        <img class="Chevron" src="~/CasSys/images/Chevron_Left.svg" />
                                    </a>
                                </button>
                            </div>
                        </div>
                        <main class="mt-4 g-3">
                            <h5 class="subtitle">
                                @(requestCulture?.RequestCulture.UICulture.Name == "en-US"
                                    ? $"{Model.CrCasBranchInformationEnName} ({Model.CrCasBranchInformationArShortName})"
                                    : $"{Model.CrCasBranchInformationArName} ({Model.CrCasBranchInformationArShortName})")
                            </h5>

                            <h6>
                                @(requestCulture?.RequestCulture.UICulture.Name == "en-US"
                                    ? Model.BranchPostVM?.CrCasBranchPostCityNavigation?.CrMasSupPostCityConcatenateEnName
                                    : Model.BranchPostVM?.CrCasBranchPostCityNavigation?.CrMasSupPostCityConcatenateArName)
                            </h6>
                            <div class="accordion inputs-accordion">
                                <div class=" inputs-accordion-item">
                                    <div class=" inputs-accordion-item-header">
                                        <span class="accordion-item-header-title">
                                            @localizer["Information"]
                                        </span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                                             viewBox="0 0 24 24" fill="none" stroke="#666666"
                                             stroke-width="3" stroke-linecap="round"
                                             stroke-linejoin="round"
                                             class="lucide lucide-chevron-down accordion-item-header-icon">
                                            <path d="m6 9 6 6 6-6" />
                                        </svg>
                                    </div>
                                    <div class="accordion-item-description-wrapper">
                                        <div class="accordion-item-description">
                                            <hr class="accordion-items-hr">
                                            <div class="container-fluid Update-data-scroll-container">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="CrCasBranchInformationTgaCode" class="form-label">
                                                            @localizer["RentedSystemNo"]
                                                            <i class="fa-solid fa-star-of-life RequirdStar"></i>

                                                        </label>
                                                        <input type="text"  class="form-control inputs" asp-for="CrCasBranchInformationTgaCode" maxlength="10" oninput="this.value=this.value.replace(/[^0-9]/g,'')" required>
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="@Model.CrCasBranchInformationTgaCode" class="text-danger"></span>
                                                                <span class="text-danger" id="CrCasBranchInformationTgaCode-Error"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="phone1" class="form-label">
                                                            @localizer["TelePhone"]
                                                        </label>
                                                        <div class="input-group has-validation">
                                                            <input type="tel"
                                                                   class="form-control inputs tel-input"
                                                                   id="phone1" asp-for="CrCasBranchInformationTelephone" maxlength="15">
                                                            <select class="input-group-text select-style counterCode" asp-for="CrMasBranchInformationTeleKey">
                                                                @foreach (var callingKey in (List<SelectListItem>)ViewData["CallingKeys"])
                                                                {
                                                                    <option value="@callingKey.Text">@callingKey.Text</option>
                                                                }
                                                            </select>
                                                            <div class="invaild">
                                                                <div class="invalid-feedback">
                                                                    <span asp-validation-for="@Model.CrCasBranchInformationTelephone" class="text-danger"></span>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="phone2" class="form-label">
                                                            @localizer["MobilePhone"]
                                                        </label>
                                                        <div class="input-group ">
                                                            <input type="tel"
                                                                   class="form-control inputs tel-input"
                                                                   id="phone2" asp-for="CrCasBranchInformationMobile" maxlength="15">
                                                            <select class="input-group-text select-style counterCode"
                                                                    asp-for="CrMasBranchInformationMobileKey">
                                                                @foreach (var callingKey in (List<SelectListItem>)ViewData["CallingKeys"])
                                                                {
                                                                    <option value="@callingKey.Text">@callingKey.Text</option>
                                                                }
                                                            </select>
                                                            <div class="invaild">
                                                                <div class="invalid-feedback">
                                                                    <span asp-validation-for="@Model.CrCasBranchInformationMobile" class="text-danger"></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="manager-name-ar"
                                                               class="form-label">
                                                            @localizer["DirNameAr"]
                                                            <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                        </label>
                                                        <input type="text" id="manager-name-ar"
                                                               class="form-control inputs arabic-input"
                                                               asp-for="CrCasBranchInformationDirectorArName" maxlength="30" oninput="this.value=this.value.replace(/[^\u0600-\u06FF\ufb50-\ufdff\ufe70-\ufeff\s]/g, '')" required>
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="@Model.CrCasBranchInformationDirectorArName" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="manager-name-en"
                                                               class="form-label">
                                                            @localizer["DirNameEn"]
                                                            <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                        </label>
                                                        <input type="text" id="manager-name-en"
                                                               class="form-control inputs english-input"
                                                               asp-for="CrCasBranchInformationDirectorEnName" maxlength="30" oninput="this.value = this.value.replace(/[^a-zA-Z ]/g, '')" required>
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="@Model.CrCasBranchInformationDirectorEnName" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>


                                                </div>
                                                <div class="row align-items-center g-3 ">
                                                    <div class="col-md-8">
                                                        <label for="CrCasBranchInformationReasons"> @localizer["reasons"]</label>
                                                        <textarea class=" form-control textarea-inputs" rows="1" maxlength="100" asp-for="CrCasBranchInformationReasons" type="text"></textarea>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="row align-items-center justify-content-end">
                                                            <div class="col-auto">
                                                                <button type="button" class="custom-img-btn"><img src="~/CasSys/images/icon.svg" data-bs-toggle="modal" href="#signature-modal" /></button>
                                                            </div>
                                                            <div class="col-auto">
                                                                <img src="@Url.Content(Model.CrCasBranchInformationDirectorSignature)" id="previewSignature">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="inputs-accordion-item">
                                    <div class="inputs-accordion-item-header">
                                        <span class="accordion-item-header-title">
                                            @localizer["Address"]
                                        </span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                                             viewBox="0 0 24 24" fill="none" stroke="#666666"
                                             stroke-width="3" stroke-linecap="round"
                                             stroke-linejoin="round"
                                             class="lucide lucide-chevron-down accordion-item-header-icon">
                                            <path d="m6 9 6 6 6-6" />
                                        </svg>
                                    </div>
                                    <div class="accordion-item-description-wrapper">
                                        <div class="accordion-item-description">
                                            <hr class="accordion-items-hr">
                                            <div class="container-fluid Update-data-scroll-container">

                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="street-name-ar"
                                                               class="form-label">@localizer["StreetNameAr"]</label>
                                                        <input type="text" id="street-name-ar"
                                                               class="form-control inputs arabic-input"
                                                               asp-for="BranchPostVM.CrCasBranchPostArStreet" maxlength="50" oninput="this.value=this.value.replace(/[^\u0600-\u06FF\ufb50-\ufdff\ufe70-\ufeff\s]/g, '')">
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="BranchPostVM.CrCasBranchPostArStreet" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="street-name-en"
                                                               class="form-label">
                                                            @localizer["StreetNameEn"]
                                                        </label>
                                                        <input type="text" id="street-name-en"
                                                               class="form-control inputs english-input"
                                                               asp-for="BranchPostVM.CrCasBranchPostEnStreet" maxlength="50" oninput="this.value = this.value.replace(/[^a-zA-Z ]/g, '')">
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="BranchPostVM.CrCasBranchPostEnStreet" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="District-name-ar"
                                                               class="form-label">@localizer["DistrictNameAr"]</label>
                                                        <input type="text" id="District-name-ar"
                                                               class="form-control inputs arabic-input"
                                                               asp-for="BranchPostVM.CrCasBranchPostArDistrict" maxlength="50" oninput="this.value=this.value.replace(/[^\u0600-\u06FF\ufb50-\ufdff\ufe70-\ufeff\s]/g, '')">
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="BranchPostVM.CrCasBranchPostArDistrict" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="District-name-en"
                                                               class="form-label">
                                                            @localizer["DistrictNameEn"]
                                                        </label>
                                                        <input type="text" id="District-name-en"
                                                               class="form-control inputs english-input"
                                                               asp-for="BranchPostVM.CrCasBranchPostEnDistrict" maxlength="50" oninput="this.value = this.value.replace(/[^a-zA-Z ]/g, '')">
                                                        <div class="invaild">
                                                            <div class="invalid-feedback">
                                                                <span asp-validation-for="BranchPostVM.CrCasBranchPostEnDistrict" class="text-danger"></span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6 ">
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <label for="Building-number"
                                                                       class="form-label">
                                                                    @localizer["BulidingNumber"]
                                                                </label>
                                                                <input type="text"
                                                                       id="Building-number" class="form-control inputs text-center" asp-for="BranchPostVM.CrCasBranchPostBuilding" maxlength="10">
                                                                <div class="invaild">
                                                                    <div class="invalid-feedback">
                                                                        <span asp-validation-for="BranchPostVM.CrCasBranchPostBuilding" class="text-danger"></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <label for="Unit-number"
                                                                       class="form-label">
                                                                    @localizer["UnitNumber"]
                                                                </label>
                                                                <input type="text" id="Unit-number" class="form-control inputs text-center" asp-for="BranchPostVM.CrCasBranchPostUnitNo" maxlength="10">
                                                                <div class="invaild">
                                                                    <div class="invalid-feedback">
                                                                        <span asp-validation-for="BranchPostVM.CrCasBranchPostUnitNo" class="text-danger"></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6 ">
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <label for="zip-code"
                                                                       class="form-label">
                                                                    @localizer["symbolMailAr"]
                                                                </label>
                                                                <input type="text" id="zip-code" class="form-control inputs text-center" asp-for="BranchPostVM.CrCasBranchPostZipCode" maxlength="10">
                                                                <div class="invaild">
                                                                    <div class="invalid-feedback">
                                                                        <span asp-validation-for="BranchPostVM.CrCasBranchPostZipCode" class="text-danger"></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <label for="Additional-number"
                                                                       class="form-label">
                                                                    @localizer["AdditionalNumber"]
                                                                </label>
                                                                <input type="text"
                                                                       id="Additional-number" class="form-control inputs text-center" asp-for="BranchPostVM.CrCasBranchPostAdditionalNumbers" maxlength="10">
                                                                <div class="invaild">
                                                                    <div class="invalid-feedback">
                                                                        <span asp-validation-for="BranchPostVM.CrCasBranchPostAdditionalNumbers" class="text-danger"></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="inputs-accordion-item">
                                    <div class="inputs-accordion-item-header">
                                        <span class="accordion-item-header-title">
                                            @localizer["Documents"]
                                        </span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                                             viewBox="0 0 24 24" fill="none" stroke="#666666"
                                             stroke-width="3" stroke-linecap="round"
                                             stroke-linejoin="round"
                                             class="lucide lucide-chevron-down accordion-item-header-icon">
                                            <path d="m6 9 6 6 6-6" />
                                        </svg>
                                    </div>
                                    <div class="accordion-item-description-wrapper">
                                        <div class="accordion-item-description">
                                            <hr class="accordion-items-hr ">
                                            <div class="container-fluid Update-data-scroll-container">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="form">
                                                            <div class="row align-items-end">
                                                                <div class="col-md-6 col-lg-4">
                                                                    <label for="doc" class="form-label">@localizer["Document"]</label>
                                                                    <select class="form-select select-style" name="doc" id="doc">
                                                                        @foreach (var item in Model.BranchDocsVM)
                                                                        {
                                                                            <option value="@item.CrCasBranchDocumentsProcedures" data-branch-id="@item.CrCasBranchDocumentsBranch">
                                                                                @(requestCulture?.RequestCulture.UICulture.Name == "en-US"
                                                                                    ? item.CrCasBranchDocumentsProceduresNavigation.CrMasSysProceduresEnName
                                                                                    : item.CrCasBranchDocumentsProceduresNavigation.CrMasSysProceduresArName)
                                                                            </option>
                                                                        }
                                                                    </select>
                                                                </div>
                                                                <div class="col-md-6 col-lg-8 doc-save-align d-flex justify-content-end">
                                                                    <button type="button" onclick="updateDocument()" class="custom-img-btn">
                                                                        <img type="button" src="~/CasSys/images/save (3).svg">
                                                                    </button>
                                                                </div>
                                                                <div class="col-md-12 mt-3">
                                                                    <div class="row mt-2">
                                                                        <div class="col-md-6">
                                                                            <label for="Doc-number" class="form-label">
                                                                                @localizer["TheNumber"] <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                                            </label>
                                                                            <input type="text" maxlength="50" id="Doc-number" class="form-control inputs number-input" name="Doc-number" required>
                                                                            <div class="invaild">
@*                                                                                 <div class="invalid-feedback"> الحقل مطلوب </div>
 *@                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-6">
                                                                            <label for="Doc-Date" class="form-label">
                                                                                @localizer["Date"] <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                                            </label>
                                                                            <input type="date" id="Doc-Date" class="form-control inputs  custom-date-input" name="Doc-Date" required>
                                                                            <div class="invaild">
@*                                                                                 <div class="invalid-feedback"> الحقل مطلوب </div>
 *@                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                    <div class="row">
                                                                        <div class="col-md-6">
                                                                            <label for="start-Date" class="form-label">
                                                                                @localizer["StartDate"] <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                                            </label>
                                                                            <input type="date" id="start-Date" class="form-control inputs  custom-date-input" name="start-Date" required>
                                                                            <div class="invaild">
@*                                                                                 <div class="invalid-feedback"> الحقل مطلوب </div>
 *@                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-6">
                                                                            <label for="end-Date" class="form-label">
                                                                                @localizer["EndDate"] <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                                            </label>
                                                                            <input type="date" id="end-Date" class="form-control inputs  custom-date-input" name="end-Date" required>
                                                                            <div class="invaild">
@*                                                                                 <div class="invalid-feedback"> الحقل مطلوب </div>
 *@                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                    <div class="row align-items-end g-3">
                                                                        <div class="col">
                                                                            <label>@localizer["reasons"]</label>
                                                                            <textarea class="form-control textarea-inputs" rows="1" maxlength="100" name="notes" id="Documentnotes" type="text"></textarea>
                                                                        </div>
                                                                        <div class="col-md-auto text-start">
                                                                            <button type="button" class="btn modal-btn" data-bs-toggle="modal" href="#Doc-photo-modal">
                                                                                <div class="row align-items-center">
                                                                                    <div class="col">@localizer["Documentphoto"]</div>
                                                                                    <div class="col-auto">
                                                                                        <div class="systems-check">
                                                                                            <i class="fa-solid fa-check text-white"></i>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </main>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<!-- delete modal -->
<div class="modal fade" id="Delete-Modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="Delete-ModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border: 1px solid var(--main-color);">
            <div class="content" id="modalContent">
            </div>
            <!-- Hidden spinner  -->
            <div class="modal-body text-center" id="spinner" style="display: none;">
                <span class="State-Modal-loader"></span>
            </div>
        </div>
    </div>
</div>
<!-- Stopp  modal -->
<div class="modal fade" id="Stop-Modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="Stop-ModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border: 1px solid var(--main-color);">
            <div class=" content" id="Stop-modal-Content">
            </div>
            <!-- Hidden spinner  -->
            <div class="modal-body text-center" id="spinner2" style="display: none;">
                <span class="State-Modal-loader"></span>
            </div>
        </div>
    </div>
</div>
<!-- document modal -->
<div class="modal fade" id="Doc-photo-modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered d-flex justify-content-center">
        <div class="modal-content Doc-photo-modal-content p-3">
            <div class="modal-body Doc-photo-modal-body">
                <div class="Doc-Card">
                    <div class="Doc-main-container" id="removeIDImg"></div>
                    <div class="Doc-upload-container" id="Doc-upload-container">
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col">
                        <div class="Doc-btn-card p-2">
                            <img src="~/CasSys/images/save (2).svg" class="w-100" id="Doc-photo-save">
                        </div>
                    </div>

                    <div class="col">
                        <div class="Doc-btn-card p-2">
                            <img src="~/CasSys/images/Camera.svg" class="w-100" id="openCamera">
                        </div>
                    </div>
                    <div class="col">
                        <div class="Doc-btn-card p-2">
                            <img src="~/CasSys/images/Pic.svg" class="w-100" id="UploadPic">
                            <input type="file" id="DocimageUpload" accept="image/*" style="display: none;">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- signature modal -->
<div class="modal fade" id="signature-modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered d-flex justify-content-center">
        <div class="modal-content signature-modal-content p-3">
            <div class="modal-body Signature-modal-body">
                <div class="SignatureCard">
                    <div class="image-main-container" id="removeSignatureImg"></div>
                    <div class="upload-container">
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-3">
                        <div class="sinature-Btn-Card p-2">
                            <img src="~/CasSys/images/signature/save.svg" class="w-100" id="save">
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="sinature-Btn-Card p-2">
                            <img src="~/CasSys/images/signature/Frame.svg" class="w-100" id="clear">
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="sinature-Btn-Card p-2">
                            <img src="~/CasSys/images/signature/file-signature_9795523 1.svg"
                                 class="w-100" id="WriteSignature">
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="sinature-Btn-Card p-2">
                            <img src="~/CasSys/images/signature/Pic.svg" class="w-100"
                                 id="UploadSigntaurePic">
                            <input type="file" id="imageUpload" accept="image/*"
                                   style="display: none;">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/CasSys/scripts/uploadPic.js"></script>
    <script src="~/CasSys/scripts/signature.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script>
        // To Handle Background
        $("#wrapper").addClass("Branches-wrapper");
        var statusInput = $("#CrCasBranchInformationStatus");
    </script>
    <script>
        function updateUserStatus(status) {
            var code = "@Model.CrCasBranchInformationCode";
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: "POST",
                    url: "/CAS/Branches/EditStatus",
                    data: { status: status, code: code },
                    success: function (result) {
                        toastr.options = { "positionClass": "@localizer["toastPostion"]" };

                        if (result == "true") {
                            //@*toastr.success("@localizer["ToastSave"]");*@
                            resolve(true);
                        } else if (result == "false_auth") {
                            toastr.error("@localizer["AuthEmplpoyee_No_auth"]");
                            resolve(false);
                        } else if (result == "udelete") {
                            toastr.error("@localizer["SureTo_Cannot_delete"]");
                            resolve(false);
                        } else {
                            toastr.error("@localizer["ToastFailed"]");
                            resolve(false);
                        }
                    },
                    error: function () {
                        toastr.error("@localizer["ToastFailed"]");
                        resolve(false);
                    }
                });
            });
        }
    </script>
    <script>
        let isDeleted = false;
        let isStoped = false
        if (statusInput.val() == '@Status.Hold') {
            isDeleted = false;
            isStoped = true
        }
        else if (statusInput.val() == '@Status.Deleted') {
            isDeleted = true;
            isStoped = false
        }

        window.onload = () => {
            DeleteState(isDeleted);
            StopState(isStoped);
        };

        function DeleteState(deleted) {
            isDeleted = deleted;

            document.getElementById("modalContent").style.display = "block";
            document.getElementById("modalIcon").src = isDeleted
                ? "/CasSys/images/Property 1=recycle.svg"
                : "/CasSys/images/delete (2).svg";

            document.getElementById("modalContent").innerHTML = isDeleted
                ? `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/Green-recycle.svg" /> @localizer["SureToRetriveDelete"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                                <p>@localizer["ModalFirstMessage_Branches_UnDelete"]</p>
                                                                                                <p>@localizer["ModalSecondMessage_Branches_UnDelete"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="RetriveBtn" onclick="DeleteLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`
                : `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/delete (2).svg" /> @localizer["SureTodelete"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                                                <p>@localizer["ModalFirstMessage_Branches_Delete"]</p>
                                                                                                                <p>@localizer["ModalSecondMessage_Branches_Delete"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="DeleteBtn" onclick="DeleteLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`;
        }
        function DeleteLoad() {
            const modalContent = document.getElementById("modalContent");
            const spinner = document.getElementById("spinner");
            const deleteModal = document.getElementById("Delete-Modal");
            const modalIcon = document.getElementById("modalIcon");

            modalContent.style.display = "none";
            spinner.style.display = "flex";

            setTimeout(async () => {
                spinner.style.display = "none";
                const modal = bootstrap.Modal.getInstance(deleteModal);
                modal.hide();

                const newStatus = isDeleted ? '@Status.UnDeleted' : '@Status.Deleted';
                const success = await updateUserStatus(newStatus);
                if (success) {
                    statusInput.val(isDeleted ? '@Status.Active' : '@Status.Deleted');
                    isDeleted = !isDeleted;

                    modalIcon.src = isDeleted
                        ? "/CasSys/images/Property 1=recycle.svg"
                        : "/CasSys/images/delete (2).svg";

                    DeleteState(isDeleted);
                    setTimeout(function () {
                        location.href = '@Url.Action("SuccessToast", "Branches")';
                    }, 500); // التأخير لمدة .5 ثوانٍ
                }
                else {
                    modalIcon.src = isDeleted
                        ? "/CasSys/images/Property 1=recycle.svg"
                        : "/CasSys/images/delete (2).svg";

                    DeleteState(isDeleted);
                }
            }, 500);
        }

        function StopState(Stoped) {
            isStoped = Stoped;

            document.getElementById("Stop-modal-Content").style.display = "block";
            document.getElementById("StopModalIcon").src = isStoped
                ? "/CasSys/images/Property 1=active.svg"
                : "/CasSys/images/stop.svg";

            document.getElementById("Stop-modal-Content").innerHTML = isStoped
                ? `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/GreenStop.svg" /> @localizer["SureToRetriveHold"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                        <p>@localizer["ModalFirstMessage_Branches_UnHold"]</p>
                                                                                        <p>@localizer["ModalSecondMessage_Branches_UnHold"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="RetriveBtn" onclick="StopLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`
                : `
                                                                                    <div class="modal-header border-0">
                                                                                      <h1 class="modal-title fs-4 m-auto d-flex align-items-start gap-2" id="Delete-ModalLabel">
                                                                                        <img src="/CasSys/images/RedStop.svg" /> @localizer["SureToHold"]
                                                                                      </h1>
                                                                                    </div>
                                                                                    <div class="modal-body">
                                                                                        <p>@localizer["ModalFirstMessage_Branches_Hold"]</p>
                                                                                        <p>@localizer["ModalSecondMessage_Branches_Hold"]</p>
                                                                                    </div>
                                                                                    <div class="modal-footer border-0">
                                                                                      <div class="container">
                                                                                        <div class="row">
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-modal-Save" id="HoldBtn" onclick="StopLoad()">@localizer["Okay"]</button>
                                                                                          </div>
                                                                                          <div class="col-md-6 text-center">
                                                                                            <button type="button" class="btn btn-Cancel" data-bs-dismiss="modal">@localizer["Cancel"]</button>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>`;
        }
        function StopLoad() {
            const stopModalContent = document.getElementById("Stop-modal-Content");
            const spinner = document.getElementById("spinner2");
            const modalElement = document.getElementById("Stop-Modal");
            const stopModalIcon = document.getElementById("StopModalIcon");

            stopModalContent.style.display = "none";
            spinner.style.display = "flex";

            setTimeout(async () => {
                spinner.style.display = "none";
                const modal = bootstrap.Modal.getInstance(modalElement);
                modal.hide();

                const newStatus = isStoped ? '@Status.UnHold' : '@Status.Hold';
                const success = await updateUserStatus(newStatus);
                if (success) {
                    statusInput.val(isStoped ? '@Status.Active' : '@Status.Hold');
                    isStoped = !isStoped;

                    stopModalIcon.src = isStoped
                        ? "/CasSys/images/Property 1=active.svg"
                        : "/CasSys/images/stop.svg";

                    StopState(isStoped);
                    setTimeout(function () {
                        location.href = '@Url.Action("SuccessToast", "Branches")';
                    }, 500); // التأخير لمدة .5 ثوانٍ
                }
            }, 500);
        }

    </script>
    <script>
        $(document).ready(function () {
            function Check_onChange_input(existName, dataField) {
                $.ajax({
                    type: "GET",
                    url: "/CAS/Branches/CheckChangedField",
                    data: { existName: existName, dataField: dataField},
                    success: function (result) {
                        console.log("feedback", result);
                        // Hide all previous error messages
                        $('.invalid-feedback').show();

                        // Show new error messages if they exist
                        if (result.errors && result.errors.length > 0) {
                            result.errors.forEach(function (error) {
                                // Use the ID from the error object to find the correct element
                                $(`#${error.field}-Error`).text(error.message).show();
                            });
                        } else {
                            // Hide the error message if no errors
                            $(`#${existName}-Error`).text("");
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }

            $('#CrCasBranchInformationTgaCode').on('change', function () {
                var newValue = $(this).val();
                Check_onChange_input('CrCasBranchInformationTgaCode', newValue);
            });

        });

    </script>
    <script>
        //Handle date
        document.addEventListener("DOMContentLoaded", function () {
            const docDateInput = document.getElementById("Doc-Date");
            const startDateInput = document.getElementById("start-Date");
            const endDateInput = document.getElementById("end-Date");

            // تحديث الحد الأدنى لـ StartDate عند تغيير DocDate
            docDateInput.addEventListener("change", function () {
                updateStartDateMin();
                updateEndDateMin();
            });

            // تحديث الحد الأدنى لـ EndDate عند تغيير StartDate
            startDateInput.addEventListener("change", function () {
                updateEndDateMin();
            });

            // التحقق من StartDate عند تغييره مباشرةً
            startDateInput.addEventListener("blur", function () {
                if (this.value < docDateInput.value) {
                    this.value = docDateInput.value; // تصحيح StartDate ليكون مساويًا أو أكبر من DocDate
                }
                updateEndDateMin();
            });

            // التحقق من EndDate عند تغييره مباشرةً
            endDateInput.addEventListener("blur", function () {
                if (this.value <= startDateInput.value) {
                    let nextDay = new Date(startDateInput.value);
                    nextDay.setDate(nextDay.getDate() + 1);
                    this.value = nextDay.toISOString().split("T")[0]; // ضبط EndDate ليكون أكبر من StartDate بيوم واحد على الأقل
                }
            });

            // تحديث الحد الأدنى لـ StartDate بناءً على DocDate
            function updateStartDateMin() {
                startDateInput.min = docDateInput.value;
                if (startDateInput.value < docDateInput.value) {
                    startDateInput.value = docDateInput.value;
                }
            }

            // تحديث الحد الأدنى لـ EndDate بناءً على StartDate
            function updateEndDateMin() {
                let nextDay = new Date(startDateInput.value);
                nextDay.setDate(nextDay.getDate() + 1);
                let formattedNextDay = nextDay.toISOString().split("T")[0];

                endDateInput.min = formattedNextDay;
                if (endDateInput.value < formattedNextDay) {
                    endDateInput.value = formattedNextDay;
                }
            }
        });


        function updateSystemsCheckBackground() {
            const systemsCheck = document.querySelector('.systems-check');
            const IDuploadContainer = document.querySelector(".Doc-upload-container");

            if (IDuploadContainer && systemsCheck) {
                if (IDuploadContainer.querySelector("img")) {
                    systemsCheck.style.backgroundColor = "green";
                } else {
                    systemsCheck.style.backgroundColor = "red"; // Reset background if no image
                }
            }
        }
        document.addEventListener('DOMContentLoaded', async function () {
            const docSelect = document.getElementById('doc');
            const docImageContainer = document.getElementById('removeIDImg'); // عنصر عرض الصورة
            const modalTriggerBtn = document.querySelector('[data-bs-toggle="modal"][href="#Doc-photo-modal"]');

            if (!docSelect || !docImageContainer || !modalTriggerBtn) {
                console.warn("Missing required elements. Script will not run.");
                return;
            }

            function updateInputs(values) {
            const docNumberInput = document.getElementById('Doc-number');
            const docDateInput = document.getElementById('Doc-Date');
            const startDateInput = document.getElementById('start-Date');
            const endDateInput = document.getElementById('end-Date');
            const notesInput = document.getElementById('Documentnotes');
            const starIcons = document.querySelectorAll('.RequirdStar');
            const docUploadContainer = document.getElementById("Doc-upload-container"); // ✅ عنصر تحميل الصورة

            if (!values) {
                console.warn("No data found for the selected document.");
                docNumberInput.value = '';
                docDateInput.value = '';
                startDateInput.value = '';
                endDateInput.value = '';
                notesInput.value = '';
                docUploadContainer.innerHTML = ''; // مسح الصورة في حال لم توجد بيانات
                starIcons.forEach(star => star.style.display = 'inline');
                return;
            }

            // تحديد تاريخ اليوم مع إضافة يوم واحد لـ endDate
            let todayDate = new Date();
            todayDate.setDate(todayDate.getDate() + 1);
            let formattedToday = todayDate.toISOString().split('T')[0];

            docNumberInput.value = values.docNumber || '';
            docDateInput.value = values.docDate || formattedToday;
            startDateInput.value = values.startDate || formattedToday;
            endDateInput.value = values.endDate || formattedToday;
            notesInput.value = values.notes || '';

            starIcons.forEach(star => star.style.display = 'none');

            // ✅ تحديث الصورة في Doc-upload-container
            if (values.image) {
                let imageUrl = values.image.replace(/^~\//, '/'); // إزالة ~ إذا كانت في البداية
                docUploadContainer.innerHTML = `<img src="${imageUrl}" alt="Document" class="preview-image" id="IDImage">`;
            } else {
                docUploadContainer.innerHTML = ''; // مسح الصورة إن لم تكن موجودة
            }

            updateSystemsCheckBackground(); // ✅ تحديث حالة الخلفية حسب وجود الصورة
        }

            // دالة جلب بيانات المستند
            async function fetchDocumentData(procedureId, branchId) {
                try {
                    const response = await fetch(`/CAS/Branches/GetDocDetails?ProcedureId=${procedureId}&BranchId=${branchId}`);
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);

                    const data = await response.json();
                    updateInputs(data);
                    console.log("Data Fetched:", data);
                } catch (error) {
                    console.error("Failed to fetch document data:", error);
                    updateInputs(null);
                }
            }

            // تحميل البيانات عند تغيير المستند
            docSelect.addEventListener('change', async function () {
                const selectedDocId = this.value;
                const selectedBranchId = this.options[this.selectedIndex]?.getAttribute("data-branch-id");
                if (selectedDocId && selectedBranchId) {
                    await fetchDocumentData(selectedDocId, selectedBranchId);
                }
            });

            // تحميل بيانات المستند الأول تلقائيًا عند فتح الصفحة
            if (docSelect.value) {
                const selectedOption = docSelect.options[docSelect.selectedIndex];
                const selectedBranchId = selectedOption?.getAttribute("data-branch-id");
                if (selectedBranchId) {
                    await fetchDocumentData(docSelect.value, selectedBranchId);
                }
            }
            updateSystemsCheckBackground();
        });
        async function updateDocument() {
            toastr.options = { "positionClass": "@localizer["toastPostion"]" };

            const docNumberInput = document.getElementById('Doc-number').value;
            const docDateInput = document.getElementById('Doc-Date').value;
            const startDateInput = document.getElementById('start-Date').value;
            const endDateInput = document.getElementById('end-Date').value;
            const notesInput = document.getElementById('Documentnotes').value;
            const selectedDocId = document.getElementById('doc').value;
            const selectedBranchId = document.getElementById('doc').options[document.getElementById('doc').selectedIndex].getAttribute("data-branch-id");
            const docImg = document.getElementById("DocImg").value;

            if (!selectedDocId || !selectedBranchId) {
                toastr.error("الرجاء اختيار مستند صالح.");
                return;
            }

            // ✅ تحويل القيم إلى كائنات Date للتحقق
            const docDate = new Date(docDateInput);
            const startDate = new Date(startDateInput);
            const endDate = new Date(endDateInput);

            // ✅ التحقق من صحة التواريخ
            if (isNaN(docDate.getTime()) || isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {
                toastr.error("الرجاء إدخال تواريخ صحيحة.");
                return;
            }

            // ✅ التحقق من ترتيب التواريخ
            if (startDate < docDate) {
                toastr.error("تاريخ البداية يجب أن يكون أكبر من أو يساوي تاريخ المستند.");
                return;
            }

            if (endDate <= startDate) {
                toastr.error("تاريخ النهاية يجب أن يكون أكبر من تاريخ البداية بيوم واحد على الأقل.");
                return;
            }

            const requestData = {
                CrCasBranchDocumentsProcedures: selectedDocId,
                CrCasBranchDocumentsBranch: selectedBranchId,
                CrCasBranchDocumentsNo: docNumberInput,
                CrCasBranchDocumentsDate: docDateInput,
                CrCasBranchDocumentsStartDate: startDateInput,
                CrCasBranchDocumentsEndDate: endDateInput,
                CrCasBranchDocumentsReasons: notesInput,
                CrCasBranchDocumentsImage: docImg
            };

            try {
                const response = await fetch('/CAS/Branches/UpdateDocDetails', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                });

                const responseData = await response.json();

                if (!response.ok) {
                    toastr.error("@localizer["ToastFailed"]");
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                console.log("تم التحديث بنجاح:", responseData);
                $("#min-loader").removeClass("d-none"); // إظهار اللودر فورًا

                setTimeout(() => {
                    toastr.success("@localizer["ToastEdit"]"); // عرض رسالة النجاح
                    setTimeout(() => {
                        location.reload(); // تحديث الصفحة بعد 1 ثانية إضافية
                    }, 1000); 
                }, 500);
            } catch (error) {
                console.error("فشل تحديث المستند:", error);
                toastr.error("@localizer["ToastFailed"]");
            }

            updateSystemsCheckBackground();
        }

    </script>
}