@using Bnan.Core.Extensions;
@using Bnan.Ui.ViewModels.CAS
@model Bnan.Ui.ViewModels.CAS.CarPriceVM
@inject IViewLocalizer localizer

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    ViewData["returnUrl"] = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";

}

<div class="col  d-flex align-items-center justify-content-center flex-column">
    <div class="container NewUpdate-container">
        <form id="msform" asp-area="CAS" asp-action="AddPriceCar" asp-controller="CarPrice" class="needs-validation" novalidate>
            <div class="row justify-content-center">
                <div class="col-lg-11">
                    <div class="row g-2 my-2">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-6">
                                    <h3> @localizer["AddPrice"] </h3>
                                </div>
                                <div class="col-md-6 save-col">
                                    <button type="button" id="saveBtn" class="custom-img-btn">
                                        <img src="~/CasSys/images/save.svg" />
                                    </button>
                                    <button type="button" class="custom-img-btn"><a class="d-flex align-items-center" href="/CAS/CarPrice/CarPrice"><img class="Chevron" src="~/CasSys/images/Chevron_Left.svg" /></a></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="row align-items-center">
                                <div class="col-md-7">
                                    <div class="row align-items-baseline ">
                                        <div class="col-md-auto">
                                            <label for="CarName" class="form-label "> @localizer["CarDistribution"] </label>
                                        </div>
                                        <div class="col" style="position: relative;">
                                            <input type="hidden" asp-for="CrCasPriceCarBasicDistributionCode">
                                            <input type="text" class="form-control inputs" asp-for="CarName">
                                            <div id="CarsNameList"
                                                 class="autocomplete-items CarsNameList">
                                            </div>
                                            <div class="invaild">
                                                <div class="invalid-feedback">
                                                    <span asp-validation-for="CarName" class="text-danger"></span>
                                                    <span id="CrCasPriceCarBasicDistributionCode-Error" class="text-danger"></span>
                                                    @Html.ValidationMessage("CrMasSupCarDistributionConcatenateName", null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row my-2">
                                        <div class="col-md-6">
                                            <div class="row align-items-baseline">
                                                <div class="col-md-auto">
                                                    <label for="start-date" class="form-label m-0">@localizer["StartDate"]</label>
                                                </div>
                                                <div class="col">
                                                    <input type="date" class="form-control inputs custom-date-input" id="start-date" asp-for="CrCasPriceCarBasicStartDate">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback"><span asp-validation-for="@Model.CrCasPriceCarBasicStartDate" class="text-danger"></span></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="row align-items-baseline">
                                                <div class="col-md-auto">
                                                    <label for="End-date" class="form-label m-0">@localizer["EndDate"]</label>
                                                </div>
                                                <div class="col">
                                                    <input type="date" class="form-control inputs custom-date-input" id="End-date" asp-for="CrCasPriceCarBasicEndDate">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback"><span asp-validation-for="@Model.CrCasPriceCarBasicEndDate" class="text-danger"></span></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="col-md-12 d-flex align-items-center justify-content-end">
                                        <div class="carImagePreview">
                                        </div>
                                    </div>
                                    <div class="col-md-12 d-flex gap-3 mt-3 justify-content-end">
                                        <p class="CarsCountTitle">@localizer["NumberOfCars"] </p> <p class="CarsCount" id="CarsCount"></p>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <di class="col-md-12">
                            <div class="row g-1">
                                <div class="col-6 col-md-3">
                                    <button class="btn PriceTabsBtn" type="button" onclick="showContent(0)"><img src="~/CasSys/images/PriceIcon.svg" style="height: 24px;">@localizer["Price"]</button>
                                </div>
                                <div class="col-6 col-md-3">
                                    <button class="btn PriceTabsBtn" type="button" onclick="showContent(1)"><img src="~/CasSys/images/RentTerms.svg"> @localizer["TermsRented"] </button>
                                </div>
                                <div class="col-6 col-md-3">
                                    <button class="btn PriceTabsBtn" type="button" onclick="showContent(2)"><img src="~/CasSys/images/PriceOption.svg"> @localizer["Choises"] </button>
                                </div>
                                <div class="col-6 col-md-3">
                                    <button class="btn PriceTabsBtn" type="button" onclick="showContent(3)"><img src="~/CasSys/images/PriceAddtions.svg">@localizer["Additionals"]</button>
                                </div>
                            </div>

                            <!-- Content Sections -->
                            <div id="Price-content-display">
                                <!-- Hidden Content Data -->
                                <div id="content-container">
                                    <main>
                                        <div class="row  CarPriceContent ">
                                            <div class="row">
                                                <div class="col-lg-3">
                                                    <label for="DailyRent" class="form-label">
                                                        @localizer["DailyRent"]
                                                        <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                    </label>
                                                    <input type="text" id="DailyRent" class="form-control inputs number-input" asp-for="DailyRent" maxlength="9" oninput="validateNumericInput(this)" data-section="0">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback"><span asp-validation-for="DailyRent" class="text-danger"></span></div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3">
                                                    <label for="WeeklyRent" class="form-label">
                                                        @localizer["WeeklyRent"]
                                                        <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                    </label>
                                                    <input type="text"  class="form-control inputs number-input" asp-for="WeeklyRent" maxlength="9" oninput="validateNumericInput(this)" data-section="0">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback"><span asp-validation-for="WeeklyRent" class="text-danger"></span></div>
                                                        <span id="CarWeeklyRent" class="text-danger"></span>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3">
                                                    <label for="MonthlyRent" class="form-label">
                                                        @localizer["MonthlyRent"]
                                                        <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                    </label>
                                                    <input type="text" class="form-control inputs number-input" asp-for="MonthlyRent" maxlength="9" oninput="validateNumericInput(this)" data-section="0">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback">
                                                            <span asp-validation-for="MonthlyRent" class="text-danger"></span>
                                                            <span id="CarMonthlyRent" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                 <div class="col-lg-3">
                                                    <label for="YearlyRent" class="form-label">
                                                        @localizer["YearlyRent"]
                                                        <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                    </label>
                                                    <input type="text" class="form-control inputs number-input" asp-for="YearlyRent" maxlength="9" oninput="validateNumericInput(this)" data-section="0">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback">
                                                            <span asp-validation-for="YearlyRent" class="text-danger"></span>
                                                            <span id="CarYearlyRent" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="extraKilometer" class="form-label">@localizer["AdditionalKmValue"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text" id="extraKilometer" class="form-control inputs number-input" asp-for="AdditionalKmValue" maxlength="6" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.AdditionalKmValue" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="extraHour" class="form-label">@localizer["ExtraHourValue"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text" id="extraHour" class="form-control inputs number-input" asp-for="ExtraHourValue" maxlength="6" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="ExtraHourValue" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="extraDriver" class="form-label">@localizer["AdditionalDriverValue"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text" id="extraDriver" class="form-control inputs number-input" asp-for="AdditionalDriverValue" maxlength="6" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.AdditionalDriverValue" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="PrivateDriver" class="form-label">@localizer["PrivateDriverValue"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text" id="PrivateDriver" class="form-control inputs number-input" asp-for="PrivateDriverValue" maxlength="6" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.PrivateDriverValue" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="InFeesTamm" class="form-label">@localizer["InFeesTamm"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text" class="form-control inputs number-input" asp-for="InFeesTamm" maxlength="6" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.InFeesTamm" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="OutFeesTamm" class="form-label"> @localizer["OutFeesTamm"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text"  class="form-control inputs number-input" asp-for="OutFeesTamm" maxlength="6" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback">
                                                        <span asp-validation-for="@Model.OutFeesTamm" class="text-danger"></span>
                                                        <span id="CarOutFeesTamm" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="AnotherFee" class="form-label"> @localizer["OtherFees"] </label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="number" id="AnotherFee" class="form-control inputs number-input" name="AnotherFee" data-section="0" >
                                                @* <div class="invaild">
                                                    <div class="invalid-feedback">الحقل مطلوب</div>
                                                </div> *@
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="taxRate" class="form-label">@localizer["TaxRate"]</label>
                                                <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                <input type="text" id="taxRate" class="form-control inputs number-input" asp-for="RentalTaxRate" maxlength="5" oninput="validateNumericInput(this)" data-section="0">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="RentalTaxRate" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <label for="notes" class="form-label">@localizer["reasons"]</label>
                                                <input type="text" id="notes" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicReasons" maxlength="100">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="CrCasPriceCarBasicReasons" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                        </div>

                                    </main>
                                    <main style="display: none;">
                                        <div class="row CarPriceContent">
                                            <div class="col-lg-3">
                                                <label for="freeDailyKilometers" class="form-label">
                                                    @localizer["DailyFreeKm"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="freeDailyKilometers" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicNoDailyFreeKm" maxlength="4" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="CrCasPriceCarBasicNoDailyFreeKm" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="freeHours" class="form-label">
                                                    @localizer["FreeAdditionalHours"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="freeHours" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicFreeAdditionalHours" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback">
                                                        <span asp-validation-for="@Model.CrCasPriceCarBasicFreeAdditionalHours" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="maxHours" class="form-label">
                                                    @localizer["HourMax"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="maxHours" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicHourMax" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="CrCasPriceCarBasicHourMax" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="contractCancellationHours" class="form-label">
                                                    @localizer["CancelHour"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="contractCancellationHours" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicCancelHour" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="CrCasPriceCarBasicCancelHour" class="text-danger"></span></div>
                                                </div>
                                            </div>

                                            <div class="row align-items-center">
                                                <div class="col-lg-3">
                                                    <label for="CrCasPriceCarBasicMinAge" class="form-label">
                                                        @localizer["MinAge"]
                                                        <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                    </label>
                                                    <input type="text" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicMinAge" maxlength="2" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback"><span asp-validation-for="CrCasPriceCarBasicMinAge" class="text-danger"></span></div>
                                                        <span id="MinAge" class="text-danger"></span>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3">
                                                    <label for="CrCasPriceCarBasicMaxAge" class="form-label">
                                                        @localizer["MaxAge"]
                                                        <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                    </label>
                                                    <input type="text" class="form-control inputs number-input" asp-for="CrCasPriceCarBasicMaxAge" maxlength="2" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                    <div class="invaild">
                                                        <div class="invalid-feedback">
                                                            <span asp-validation-for="@Model.CrCasPriceCarBasicMaxAge" class="text-danger"></span>
                                                            <span id="MaxAge" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3">
                                                    <div class="d-flex gap-3 align-items-center">
                                                        <input class="form-check-input checkbox" type="checkbox"
                                                               id="Sdad-Account" name="CrCasPriceCarBasicIsAdditionalDriver" value="false">
                                                        <label class="form-check-label" for="Sdad-Account">
                                                            @localizer["IsAdditionalDriver"]
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="accidentDeductible" class="form-label">
                                                    @localizer["CompensationAccident"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="accidentDeductible" class="form-control inputs number-input" asp-for="CompensationAccident" maxlength="9" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="CompensationAccident" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="theftDeductible" class="form-label">
                                                    @localizer["CompensationTheft"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="theftDeductible" class="form-control inputs number-input" asp-for="CompensationTheft" maxlength="9" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.CompensationTheft" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="drowningDeductible" class="form-label">
                                                    @localizer["CompensationDrowning"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="drowningDeductible" class="form-control inputs number-input" asp-for="CompensationDrowning" maxlength="9" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.CompensationDrowning" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <label for="fireDeductible" class="form-label">
                                                    @localizer["CompensationFire"]
                                                    <i class="fa-solid fa-star-of-life RequirdStar"></i>
                                                </label>
                                                <input type="text" id="fireDeductible" class="form-control inputs number-input" asp-for="CompensationFire" maxlength="9" oninput="this.value=this.value.replace(/[^0-9]/g,'')" data-section="1">
                                                <div class="invaild">
                                                    <div class="invalid-feedback"><span asp-validation-for="@Model.CompensationFire" class="text-danger"></span></div>
                                                </div>
                                            </div>
                                        </div>

                                    </main>
                                    <main style="display: none;">
                                        <div class="row justify-content-center">
                                            <div class="col-md-7 col-lg-6">
                                                <div class="PriceTableContainer">
                                                    <div>
                                                        <table class="table  CarPriceTable">
                                                            <thead>
                                                                <tr>
                                                                    <th style="width: 75%;"> @localizer["Choises"] </th>
                                                                    <th>  @localizer["Value"] </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @{
                                                                    int no1 = 1;
                                                                }
                                                                @foreach (var item in ViewBag.Options)
                                                                {
                                                                    <tr>
                                                                        <td>
                                                                            <div class="TableChecks">
                                                                                <input class="form-check-input checkbox OptionsCheckBoxs" type="checkbox" id="OptionsCheckBoxs@item.CrMasSupContractOptionsCode"
                                                                                       data-id="@item.CrMasSupContractOptionsCode" name="OptionsCheckBoxs[IndexOf(item)]" value="false">
                                                                                <label class="form-check-label" for="openMeter">
                                                                                    @(requestCulture?.RequestCulture.UICulture.Name == "en-US" ? item.CrMasSupContractOptionsEnName : item.CrMasSupContractOptionsArName)
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <input class="Table-inputs number-input Choises" type="text" id="Choises@item.CrMasSupContractOptionsCode"
                                                                            data-id="@item.CrMasSupContractOptionsCode" name="Choises[IndexOf(item)]" autocomplete="off" maxlength="6"
                                                                            value="0" oninput="validateNumericInput(this)">
                                                                        </td>
                                                                    </tr>
                                                                    no1++;
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </main>
                                    <main style="display: none;">
                                        <div class="row justify-content-center">
                                            <div class="col-md-7 col-lg-6">
                                                <div class="PriceTableContainer">
                                                    <div>
                                                        <table class="table  CarPriceTable">
                                                            <thead>
                                                                <tr>
                                                                    <th style="width: 75%;"> @localizer["Additionals"] </th>
                                                                    <th> @localizer["Value"] </th>

                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @{
                                                                    int no3 = 1;
                                                                }
                                                                @foreach (var item in ViewBag.Additional)
                                                                {
                                                                    <tr>
                                                                        <td>
                                                                            <div class="TableChecks">
                                                                                <input class="form-check-input checkbox AdditionalCheckBoxs" type="checkbox" id="Additional@item.CrMasSupContractOptionsCode"
                                                                                       name="AdditionalCheckBoxs[IndexOf(item)]" data-id="@item.CrMasSupContractAdditionalCode" value="false">
                                                                                <label class="form-check-label" for="deliverCarToRenter">
                                                                                    @(requestCulture?.RequestCulture.UICulture.Name == "en-US" ? item.CrMasSupContractAdditionalEnName : item.CrMasSupContractAdditionalArName)
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <input class="Table-inputs number-input Additional" type="text" id="Additional@item.CrMasSupContractAdditionalCode"
                                                                            data-id="@item.CrMasSupContractAdditionalCode" name="Additional[IndexOf(item)]" autocomplete="off" maxlength="6"
                                                                            value="0" oninput="validateNumericInput(this)">
                                                                        </td>
                                                                    </tr>
                                                                    no3++;
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </main>
                                </div>
                            </div>

                            <!-- Navigation Buttons -->
                            <div class="mt-3 d-flex justify-content-between">
                                <button id="prev-btn" type="button" class="btn NextPrevBtn" onclick="prevContent()" disabled> <i class="fa-solid fa-chevron-right Chevron"></i>@localizer["Previous"]</button>
                                <button id="next-btn" type="button" class="btn NextPrevBtn" onclick="nextContent()">@localizer["Next"] <i class="fa-solid fa-chevron-left Chevron"></i></button>
                            </div>


                        </di>
                    </div>
                </div>
            </div>
        </form>
    </div>

</div>


@section scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // To Handle Background
        $("#wrapper").addClass("Branches-wrapper");
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const dataLists = {
                Cars: @Html.Raw(Json.Serialize(ViewBag.CarsList))
            };
            const carNameInput = document.getElementById("CarName");
            const startDateInput = document.getElementById("start-date");
            const endDateInput = document.getElementById("End-date");
            const carCodeField = document.getElementById("CrCasPriceCarBasicDistributionCode"); // حقل الكود

            let isTrue = false; // التأكد من تحديث القيمة عند اختيار السيارة

            // تعطيل التواريخ عند تحميل الصفحة
            startDateInput.disabled = true;
            endDateInput.disabled = true;

            // تحديث حالة الحقول بناءً على isTrue
            function updateDateFields() {
                if (isTrue) {
                    startDateInput.disabled = false; // تمكين Start Date
                } else {
                    startDateInput.disabled = true;
                    endDateInput.disabled = true;
                    startDateInput.value = "";
                    endDateInput.value = "";
                }
            }
                 // تفريغ جميع الحقول التي تحتوي على كلاس "number-input"
            function clearNumberInputs() {
                $(".number-input").val(""); // تفريغ الحقول التي تحتوي على الكلاس
            }

            // عند اختيار Start Date، يتم تمكين End Date مع تحديد الحد الأدنى
            startDateInput.addEventListener("change", function () {
                if (startDateInput.value) {
                    endDateInput.disabled = false;

                    // تحديد الحد الأدنى ليكون يومًا بعد Start Date
                    let minEndDate = new Date(startDateInput.value);
                    minEndDate.setDate(minEndDate.getDate() + 1);
                    endDateInput.min = minEndDate.toISOString().split("T")[0];

                    // إذا كان End Date غير صالح، يتم مسحه
                    if (endDateInput.value && new Date(endDateInput.value) < minEndDate) {
                        endDateInput.value = "";
                    }
                } else {
                    endDateInput.disabled = true;
                    endDateInput.value = "";
                }
            });

            // تهيئة الـ autocomplete عند تحميل الصفحة
            $(document).ready(function () {
                function setupAutocomplete(inputId, list, dataList) {
                    const inputField = $("#" + inputId);
                    const autocompleteList = $("#" + list);
                    const errorMessage = $("#CrCasPriceCarBasicDistributionCode-Error"); // عنصر الخطأ
                    const carCodeField = $("#CrCasPriceCarBasicDistributionCode");

                    // عند إدخال نص
                    inputField.on("input", function () {
                        const value = this.value.toLowerCase();
                        autocompleteList.empty();
                         // 🛑 مسح جميع الحقول عند تغيير النص
                        clearNumberInputs();
                        isTrue = false;
                        updateDateFields();
                        if (value) {
                            let matchesFound = false;
                            dataList.forEach(car => {
                                if (car.text.toLowerCase().includes(value)) {
                                    autocompleteList.append(`<div data-name="${car.text}" data-value="${car.value}" data-image="${car.image}" data-count="${car.count}">${car.text}</div>`);
                                    matchesFound = true;
                                }
                            });

                            matchesFound ? autocompleteList.show() : autocompleteList.hide();
                        } else {
                            autocompleteList.hide();
                        }
                    });

                    // عند اختيار عنصر من القائمة
                    $(document).on("click", "#" + list + " div", function () {
                        const selectedCar = $(this).data("name");
                        const carImage = $(this).data("image");
                        const carCount = $(this).data("count");
                        const carCode = $(this).data("value");

                        inputField.val(selectedCar);
                        carCodeField.val(carCode);
                        autocompleteList.empty().hide();

                        // عرض صورة السيارة
                        if ($('.carImagePreview img').length) {
                            $('.carImagePreview img').attr('src', `${carImage}`);
                        } else {
                            $('.carImagePreview').append($('<img>').attr('src', `${carImage}`));
                        }

                        // عرض العدد
                        $(".CarsCount").text(carCount);

                        // تحديث حالة الإدخال الصحيحة
                        isTrue = true;
                        errorMessage.text("");
                        inputField.removeClass("is-invalid");

                        // ✅ تحديث حالة الحقول مباشرة بعد اختيار السيارة الصحيحة
                        updateDateFields();
                    });

                    // عند فقدان التركيز، التحقق من صحة الإدخال
                    inputField.on("blur", function () {
                        const inputValue = inputField.val().trim();
                        const carExists = dataList.some(car => car.text === inputValue);

                        if (!carExists) {
                            // إذا كان الإدخال غير صحيح، نظهر الخطأ ونمسح القيم
                            errorMessage.text("@localizer["requiredFiled"]");
                            inputField.addClass("is-invalid");
                            carCodeField.val(""); // مسح الكود المخفي
                            $(".carImagePreview img").attr("src", ""); // مسح الصورة
                            $(".CarsCount").text(""); // مسح العدد
                            isTrue = false;
                        } else {
                            // إذا كان الإدخال صحيحًا
                            errorMessage.text("");
                            inputField.removeClass("is-invalid");
                            isTrue = true;
                        }

                        // ✅ تحديث حالة الحقول بعد التحقق
                        updateDateFields();
                    });

                    // إخفاء القائمة عند الضغط خارجها
                    $(document).click(function (e) {
                        if (!$(e.target).closest("#" + list + ", #" + inputId).length) {
                            autocompleteList.empty().hide();
                        }
                    });
                }

                setupAutocomplete("CarName", "CarsNameList", dataLists.Cars);
            });
        });
    </script>

    <!-- local script for moving between fields -->
    <script>
        let currentIndex = 0;
        const contents = Array.from(document.querySelectorAll("#content-container main"));
        const tabButtons = document.querySelectorAll(".PriceTabsBtn");

        function showContent(index) {
            if (index < 0 || index >= contents.length) return;
            currentIndex = index;

            // عرض المحتوى المقابل
            contents.forEach((content, i) => {
                content.style.display = i === index ? 'block' : 'none';
            });

            updateButtons();
            updateActiveTab(index);
            focusFirstInput(index); // التركيز على أول مدخل في المحتوى المفتوح
        }

        function focusFirstInput(index) {
            const firstInput = contents[index].querySelector('input, textarea');
            if (firstInput) firstInput.focus(); // التركيز على أول مدخل أو منطقة نص
        }

        function prevContent() {
            if (currentIndex === 1) {
                document.getElementById("CarName").removeAttribute("readonly");
                document.getElementById("start-date").removeAttribute("readonly");
                document.getElementById("End-date").removeAttribute("readonly");
            }
            if (currentIndex > 0) {
                showContent(currentIndex - 1);
            }
        }

        function nextContent() {
            if ($('form').valid() && $("#CrCasPriceCarBasicDistributionCode-Error").text().trim() === "") {
                let isValid = false;

                if (currentIndex === 0) {
                    isValid = handleNextButtonFirstIndexClick();
                } else if (currentIndex === 1) {
                    isValid = handleNextButtonSecondIndexClick();
                } else {
                    isValid = true; // السماح بالانتقال للتابات التي لا تحتاج تحقق إضافي
                }

                if (isValid && currentIndex < contents.length - 1) {
                    showContent(currentIndex + 1);
                }
            }
        }

        function updateButtons() {
            // تعطيل جميع الأزرار باستثناء الزر الأول
            tabButtons.forEach((btn, i) => {
                btn.disabled = (i !== 0 && i > currentIndex);
            });

            document.getElementById("prev-btn").disabled = currentIndex === 0;
            document.getElementById("next-btn").disabled = currentIndex === contents.length - 1;
        }

        function updateActiveTab(index) {
            tabButtons.forEach((btn, i) => {
                btn.classList.toggle("active", i === index);
            });
        }

        function handleSubmit(event) {
            event.preventDefault(); // منع الإرسال الافتراضي للنموذج
            const inputs = document.querySelectorAll('input, textarea');
            let firstErrorInput = null; // متغير لتخزين المدخل الأول الذي يحتوي على خطأ

            // التحقق من وجود أخطاء في التحقق
            inputs.forEach(input => {
                if (!input.checkValidity()) {
                    input.classList.add('error'); // إضافة الخطأ للمدخل
                    if (!firstErrorInput) {
                        firstErrorInput = input; // حفظ المدخل الأول الذي يحتوي على خطأ
                    }
                } else {
                    input.classList.remove('error'); // إزالة الخطأ إذا كان صالحًا
                }
            });

            // إذا كان هناك خطأ، عرض القسم الذي يحتوي على خطأ
            if (firstErrorInput) {
                const mainIndex = firstErrorInput.dataset.section;
                if(mainIndex){
                    console.log(mainIndex)
                showContent(parseInt(mainIndex));
                firstErrorInput.focus(); // التركيز على المدخل الذي يحتوي على الخطأ
                }

            } else {
                // متابعة إرسال النموذج إذا لم تكن هناك أخطاء
                event.target.submit();
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            updateButtons();
            showContent(0); // عرض المحتوى الأول

            var form = document.getElementById('msform');

            $("#saveBtn").click(function (e) {
                e.preventDefault(); // منع الإرسال الافتراضي حتى نتحقق من صحة البيانات

                if ($('#msform').valid()) {
                    $("#min-loader").removeClass("d-none"); // إظهار اللودر فورًا

                    // إزالة الحقول المخفية السابقة إذا وُجدت (لتجنب التكرار)
                    document.querySelectorAll("input[name='Additionals'], input[name='Choises']").forEach(input => input.remove());

                    // ✅ جمع البيانات من الحقول الإضافية (Additional)
                    var AdditionalData = Array.from(document.querySelectorAll('.Additional')).map(add => {
                        var id = add.getAttribute('data-id');
                        var value = add.value;
                        var check = document.querySelector('.AdditionalCheckBoxs[data-id="' + id + '"]')?.checked || false;
                        return { Id: id, Value: value, Checked: check };
                    });

                    // ✅ إضافة البيانات إلى النموذج كحقل مخفي
                    var hiddenInputForAdditional = document.createElement('input');
                    hiddenInputForAdditional.type = 'hidden';
                    hiddenInputForAdditional.name = 'Additionals';
                    hiddenInputForAdditional.value = JSON.stringify(AdditionalData);
                    form.appendChild(hiddenInputForAdditional);

                    // ✅ جمع البيانات من الحقول المختارة (Choises)
                    var ChoisesData = Array.from(document.querySelectorAll('.Choises')).map(Choise => {
                        var id = Choise.getAttribute('data-id');
                        var value = Choise.value;
                        var check = document.querySelector('.OptionsCheckBoxs[data-id="' + id + '"]')?.checked || false;
                        return { Id: id, Value: value, Checked: check };
                    });

                    // ✅ إضافة البيانات إلى النموذج كحقل مخفي
                    var hiddenInputForChoises = document.createElement('input');
                    hiddenInputForChoises.type = 'hidden';
                    hiddenInputForChoises.name = 'Choises';
                    hiddenInputForChoises.value = JSON.stringify(ChoisesData);
                    form.appendChild(hiddenInputForChoises);

                    // ✅ إرسال النموذج بعد تجهيز البيانات
                    form.submit();
                }
            });
        });
        function handleNextButtonFirstIndexClick() {
            var isValid = true;
            var dailyRent = parseFloat($("#DailyRent").val());
            var weeklyRent = parseFloat($("#WeeklyRent").val());
            var monthlyRent = parseFloat($("#MonthlyRent").val());
            var yearlyRent = parseFloat($("#YearlyRent").val());
            var InFeesTamm = parseFloat($("#InFeesTamm").val());
            var OutFeesTamm = parseFloat($("#OutFeesTamm").val());

            if (weeklyRent >= dailyRent) {
                $("#CarWeeklyRent").text('@localizer["WeeklyRentError"]');
                isValid = false;
            } else {
                $("#CarWeeklyRent").text('');
            }

            if (monthlyRent >= weeklyRent) {
                $("#CarMonthlyRent").text('@localizer["MonthlyRentError"]');
                isValid = false;
            } else {
                $("#CarMonthlyRent").text('');
            }
            if (yearlyRent >= monthlyRent) {
                $("#CarYearlyRent").text('@localizer["YearlyRentError"]');
                isValid = false;
            }
            else {
                $("#YearlyRent").text('');
            }

            if (OutFeesTamm < InFeesTamm) {
                $("#CarOutFeesTamm").text('@localizer["OutFeesTammError"]');
                isValid = false;
            } else {
                $("#CarOutFeesTamm").text('');
            }

            if (!isValid) return false;

            document.getElementById("CarName").setAttribute("readonly", "");
            document.getElementById("start-date").setAttribute("readonly", "");
            document.getElementById("End-date").setAttribute("readonly", "");

            return true;
        }

        function handleNextButtonSecondIndexClick() {
            var isValid = true;
            var MinAge = parseInt($("#CrCasPriceCarBasicMinAge").val());
            var MaxAge = parseInt($("#CrCasPriceCarBasicMaxAge").val());

            if (MaxAge < MinAge) {
                $("#MaxAge").text('@localizer["MaxAgeError"]');
                isValid = false;
            } else {
                $("#MaxAge").text('');
            }

            return isValid;
        }
    </script>
    <script>
        function validateNumericInput(input) {
            let maxLength = parseInt(input.getAttribute("maxlength")); // الحد الأقصى للإدخال
            let maxAfterDecimal = 2; // رقمين بعد العلامة العشرية
            let maxBeforeDecimal = maxLength - (maxAfterDecimal + 1); // عدد الأرقام قبل العلامة العشرية

            let value = input.value;

            // السماح فقط بالأرقام والنقطة العشرية
            value = value.replace(/[^0-9.]/g, '');

            // منع إدخال أكثر من نقطة عشرية واحدة
            let decimalCount = (value.match(/\./g) || []).length;
            if (decimalCount > 1) {
                value = value.substring(0, value.lastIndexOf(".")); // إزالة النقطة الزائدة
            }

            let decimalIndex = value.indexOf('.');

            if (decimalIndex !== -1) {
                let beforeDecimal = value.substring(0, decimalIndex);
                let afterDecimal = value.substring(decimalIndex + 1);

                // منع النقطة في بداية الرقم
                if (beforeDecimal === "") {
                    beforeDecimal = "0";
                }

                // تقييد الأرقام قبل وبعد العلامة العشرية
                beforeDecimal = beforeDecimal.substring(0, maxBeforeDecimal);
                afterDecimal = afterDecimal.substring(0, maxAfterDecimal);

                // تحديث القيمة النهائية
                input.value = beforeDecimal + '.' + afterDecimal;
            } else {
                // لا يوجد نقطة عشرية، تقييد الإدخال بعدد الأرقام المسموح بها
                input.value = value.substring(0, maxBeforeDecimal);
            }
        }







       
        document.addEventListener('DOMContentLoaded', function () {
            // Code to be executed when the DOM is ready
            var inputElements = document.querySelectorAll('input');
            inputElements.forEach(function (input) {
                input.setAttribute('autocomplete', 'off');
            });
        });
        $(document).on("click", "[type='checkbox']", function (e) {
            if (this.checked) {
                $(this).attr("value", "true");
            } else {
                $(this).attr("value", "false");
            }
        });
    </script>
   

}